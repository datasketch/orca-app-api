shiny::runApp()
runApp()
runApp()
runApp()
runApp()
xx <- read_csv("data/inspecciones.csv")
xx <- read_csv("data/aprehensiones.csv")
runApp()
runApp()
runApp()
dsapptools::data_filter
runApp()
runApp()
runApp()
shiny::runApp()
inspecciones <- read_csv("data/inspecciones.csv")
View(inspecciones)
table(inspecciones$anio)
runApp()
shiny::runApp()
runApp()
xx <- read_csv("data/aprehensiones.csv")
names(xx)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(xx)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
aggregation_data
runApp()
runApp()
runApp()
dsapptools:::aggregation_data
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
dsdataprep::aggregation_data
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github("datasketch/dsdataprep")
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dsopts::dsopts_available()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
dsopts::dsopts_available()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
lfltmagic::lflt_choropleth_GnmNum
runApp()
sitools::f2si(7868970)
?sitools::f2si
runApp()
runApp()
runApp()
hgchmagic:::data_draw
runApp()
runApp()
runApp()
runApp()
runApp()
dsopts::dsopts_available()
runApp()
runApp()
?rename
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
dsvizopts::dsviz_defaults()
devtools::install_github("datasketch/dsvizopts")
shiny::runApp()
runApp()
runApp()
devtools::install_github("datasketch/dsvizopts")
shiny::runApp()
shiny::runApp()
devtools::install_github("datasketch/ltgeo@dev")
shiny::runApp()
shiny::runApp()
xx <- dsvizopts::dsviz_defaults()
runApp()
runApp()
xx$shiny
runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github("datasketch/dsvizopts")
devtools::install_github("datasketch/ltgeo@dev")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github("datasketch/ltgeo")
devtools::install_github("datasketch/ltgeo@dev")
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
devtools::install_github("datasketch/ltgeo@dev")
devtools::install_github("datasketch/ltgeo@dev", ref = "e7088b8f84279d1bda097b5641d50b28bf39a4f7")
shiny::runApp()
shiny::runApp()
devtools::install_github("datasketch/ltgeo@dev", ref = "e7088b8f84279d1bda097b5641d50b28bf39a4f7")
devtools::install_github("datasketch/ltgeo@dev", ref = "afe58bfccd46a57cab5eda2dd4332b258367c392")
devtools::install_github("datasketch/ltgeo@dev", ref = "e7088b8f84279d1bda097b5641d50b28bf39a4f7", force = T)
shiny::runApp()
devtools::install_github("datasketch/ltgeo@dev", ref = "afe58bfccd46a57cab5eda2dd4332b258367c392", force = T)
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
devtools::install_github("datasketch/ltgeo@dev")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
xx <- dsvizopts::dsviz_defaults()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
iconv("jolaaá", "UTF-8", "ASCII//TRANSLIT")
iconv("holâ", to = "UTF-8", sub = "")
iconv("holá", to = "UTF-8", sub = "")
stringi::stri_trans_general("hole3é", "Latin-ASCII")
runApp()
names_data <- "Inspecciones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
library(httr)
library(curl)
library(jsonlite)
token <- content(get_token)
end_p = Sys.Date()
end_p
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_inspeccion <- lubridate::dmy(result$fecha_inspeccion)
result$anio <- lubridate::year(result$fecha_inspeccion)
result$fecha_am <- format(result$fecha_inspeccion, "%Y-%m")
max(result$fecha_inspeccion)
result$mcipio <- trimws(result$mcipio)
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/inspecciones.csv")
names_data <- "Aprehensiones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
end_p = Sys.Date()
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_acta <- lubridate::dmy(result$fecha_acta)
result$anio <- lubridate::year(result$fecha_acta)
result$fecha_ym <- format(result$fecha_acta, "%Y-%m")
max(result$fecha_acta)
result$mcipio <- trimws(result$mcipio)
clases_pr <-  c("LICOR EXTRANJERO", "LICOR NACIONAL", "CIGARRILLO EXTRANJERO", "CERVEZA EXTRANJERA", "CIGARRILLO NACIONAL", "CERVEZA NACIONAL")
result$cat_producto <- ifelse(result$clase_producto %in% clases_pr, "Clases principales", "Otras clases")
result$clase_producto[result$clase_producto %in% c("LICOR EXTRANJERO", "LICOR NACIONAL")] <- "LICORES"
result$clase_producto[result$clase_producto %in% c("CIGARRILLO EXTRANJERO", "CIGARRILLO NACIONAL")] <- "CIGARRILLOS"
result$clase_producto[result$clase_producto %in% c("CERVEZA EXTRANJERA", "CERVEZA NACIONAL")] <- "CERVEZAS"
result$cierre_establecimiento <- ifelse(result$cierre_establecimiento, "SÍ", "NO")
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/aprehensiones.csv")
runApp()
shiny::runApp()
names_data <- "Inspecciones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
end_p = Sys.Date()
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_inspeccion <- lubridate::dmy(result$fecha_inspeccion)
result$anio <- as.character(lubridate::year(result$fecha_inspeccion))
result$fecha_am <- format(result$fecha_inspeccion, "%Y-%m")
max(result$fecha_inspeccion)
result$mcipio <- trimws(result$mcipio)
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/inspecciones.csv")
names_data <- "Aprehensiones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
end_p = Sys.Date()
#url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2023-08-08&fechaFinal=', end_p)
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_acta <- lubridate::dmy(result$fecha_acta)
result$anio <- as.character(lubridate::year(result$fecha_acta))
result$fecha_ym <- format(result$fecha_acta, "%Y-%m")
max(result$fecha_acta)
result$mcipio <- trimws(result$mcipio)
clases_pr <-  c("LICOR EXTRANJERO", "LICOR NACIONAL", "CIGARRILLO EXTRANJERO", "CERVEZA EXTRANJERA", "CIGARRILLO NACIONAL", "CERVEZA NACIONAL")
result$cat_producto <- ifelse(result$clase_producto %in% clases_pr, "Clases principales", "Otras clases")
result$clase_producto[result$clase_producto %in% c("LICOR EXTRANJERO", "LICOR NACIONAL")] <- "LICORES"
result$clase_producto[result$clase_producto %in% c("CIGARRILLO EXTRANJERO", "CIGARRILLO NACIONAL")] <- "CIGARRILLOS"
result$clase_producto[result$clase_producto %in% c("CERVEZA EXTRANJERA", "CERVEZA NACIONAL")] <- "CERVEZAS"
result$cierre_establecimiento <- ifelse(result$cierre_establecimiento, "SÍ", "NO")
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/aprehensiones.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(httr)
library(curl)
library(jsonlite)
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
names_data <- "Inspecciones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
end_p = Sys.Date()
#url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2023-08-08&fechaFinal=', end_p)
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
end_p
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_inspeccion <- lubridate::dmy(result$fecha_inspeccion)
result$anio <- lubridate::year(result$fecha_inspeccion)
print("$$$$$$$$$")
dx <- result |> filter(anio == "2023")
print(nrow(dx))
result$fecha_am <- format(result$fecha_inspeccion, "%Y-%m")
max(result$fecha_inspeccion)
result$mcipio <- trimws(result$mcipio)
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/inspecciones.csv")
names_data <- "Aprehensiones"
get_token <-
httr::POST(
'https://fondocuenta.fnd.org.co/ApiOrcaDS/api/Account',
add_headers('content-type' = 'application/json'),
body = '{"Username": "OrcaDs", "Password":"ProdDS-2022Orca"}'
)
token <- content(get_token)
end_p = Sys.Date()
url <- paste0('https://fondocuenta.fnd.org.co/ApiOrcaDS/api/', names_data, '?fechaInicial=2000-01-01&fechaFinal=', end_p)
respose <-
httr::GET(
url,
add_headers('Authorization' = paste('Bearer', token))
)
result <- fromJSON(content(respose, as = 'text'))
result$fecha_acta <- lubridate::dmy(result$fecha_acta)
result$anio <- lubridate::year(result$fecha_acta)
result$fecha_ym <- format(result$fecha_acta, "%Y-%m")
max(result$fecha_acta)
result$mcipio <- trimws(result$mcipio)
clases_pr <-  c("LICOR EXTRANJERO", "LICOR NACIONAL", "CIGARRILLO EXTRANJERO", "CERVEZA EXTRANJERA", "CIGARRILLO NACIONAL", "CERVEZA NACIONAL")
result$cat_producto <- ifelse(result$clase_producto %in% clases_pr, "Clases principales", "Otras clases")
result$clase_producto[result$clase_producto %in% c("LICOR EXTRANJERO", "LICOR NACIONAL")] <- "LICORES"
result$clase_producto[result$clase_producto %in% c("CIGARRILLO EXTRANJERO", "CIGARRILLO NACIONAL")] <- "CIGARRILLOS"
result$clase_producto[result$clase_producto %in% c("CERVEZA EXTRANJERA", "CERVEZA NACIONAL")] <- "CERVEZAS"
result$cierre_establecimiento <- ifelse(result$cierre_establecimiento, "SÍ", "NO")
result$depto[result$depto == "SAN ANDRES ISLAS"] <- "ARCHIPIELAGO DE SAN ANDRES, PROVIDENCIA Y SANTA CATALINA"
readr::write_csv(result, "data/aprehensiones.csv")
runApp()
